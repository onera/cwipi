#-----------------------------------------------------------------------------
# This file is part of the CWIPI library. 
#
# Copyright (C) 2011  ONERA
#
# This library is free software; you can redistribute it and/or
# modify it under the terms of the GNU Lesser General Public
# License as published by the Free Software Foundation; either
# version 3 of the License, or (at your option) any later version.
#
# This library is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
# Lesser General Public License for more details.
#
# You should have received a copy of the GNU Lesser General Public
# License along with this library. If not, see <http://www.gnu.org/licenses/>.
#-----------------------------------------------------------------------------

#!/bin/sh

PWD1=`pwd`

if [ ! -d sbin ]; then
  echo "$0 must be called from top directory (../$0)"
  exit 1
fi

# ____________________________________________________________________
# aclocal creates the aclocal.m4 file from the standard macro and the
# custom macro embedded in the directory /config
# and KERNEL config_files directory.
# output:
#   aclocal.m4
#   autom4te.cache (directory)
echo "====================================================== aclocal"

  aclocal -I config || exit 1

# ____________________________________________________________________
# libtoolize creates some configuration files (ltmain.sh,
# config.guess and config.sub). It only depends on the libtool
# version. The files are created in the directory specified with the
# AC_CONFIG_AUX_DIR(<mydir>) tag (see configure.ac).
# output:
#   config/config.guess
#   config/config.sub
#   config/ltmain.sh
#
echo "====================================================== libtoolize"

libtoolize --force --copy --automake || exit 1

# ____________________________________________________________________
# autoheader creates config_priv.h.and config.h.in from configure.ac
# output:
#   configure
echo "====================================================== autoheader"

autoheader -I . -I config  || exit 1

# ____________________________________________________________________
# autoconf creates the configure script from the file configure.ac (or
# configure.in if configure.ac doesn't exist)
# output:
#   configure
echo "====================================================== autoconf"

autoconf  || exit 1

# ____________________________________________________________________
# automake creates some scripts used in building process
# (install-sh, missing, ...). It only depends on the automake
# version. The files are created in the directory specified with the
# AC_CONFIG_AUX_DIR(<mydir>) tag (see configure.ac). This step also
# creates the Makefile.in files from the Makefile.am files.
# output:
#   config/compile
#   config/depcomp
#   config/install-sh
#   config/missing
#   config/py-compile
#   Makefile.in (from Makefile.am)
echo "====================================================== automake"

automake --copy --add-missing

\rm -rf autom4te.cache

# ____________________________________________________________________
# cython create the Python API of CWIPI 
# output:
#   cython/CWIPI.c
echo "====================================================== cython"

cd Cython
PYTHON=python
CYTHON=cython
PYTHON_INCLUDE=`${PYTHON} -c 'from distutils import sysconfig; print( sysconfig.get_python_inc() )'`
MPI4PY_INCLUDE=`${PYTHON} -c 'import mpi4py; print( mpi4py.get_include() )'`
NUMPY_INCLUDE=`${PYTHON} -c 'import numpy; print( numpy.get_include() )'`
CWIPI_INCLUDE=${PWD1}/src

${CYTHON} -I${MPI4PY_INCLUDE} -I${CWIPI_INCLUDE} -I${NUMPY_INCLUDE} cwipi.pyx
mv cwipi.c cwipi.c.default

cd ${PWD1}
